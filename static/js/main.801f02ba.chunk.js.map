{"version":3,"sources":["components/Stylesheet.js","components/Header.jsx","assets/Close.svg","assets/Users.svg","assets/Timezone.svg","assets/Views.svg","components/LocationInfo.jsx","components/Modal.jsx","assets/Edit.svg","components/LocationCard.jsx","components/CardContainer.jsx","App.js","index.js"],"names":["SubHeaderTitle","styled","h4","HeaderTitle","h1","CardWrapper","main","EditIconContainer","div","EditIcon","img","Card","CardTitle","h3","CardList","ul","CardListItem","li","CardListIcon","CardListText","p","ModalContainer","ModalWindow","ModalTitle","ModalSubtitle","h5","ModalDescription","ModalCTA","button","ModalXButton","Header","LocationInfo","locationData","views","src","UsersSvg","alt","userCount","TimezoneSvg","moment","createdAt","format","ViewsSvg","Modal","hideModalFunction","modalData","onClick","e","stopPropagation","name","CloseSvg","description","LocationCard","showModalHandler","useState","setViews","id","updatedViews","openModal","EditSvg","CardContainer","props","length","map","fetchUrl","App","modalState","setModalState","setModalData","setLocationData","useEffect","a","axios","get","request","data","console","error","fetchData","Fragment","document","body","style","overflow","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.801f02ba.chunk.js","sourcesContent":["//styles for each component on the page, imports made only as needed\r\nimport styled from \"styled-components\";\r\n\r\nexport const SubHeaderTitle = styled.h4`\r\n  opacity: 30%;\r\n  line-height: 28px;\r\n  margin-top: 19px;\r\n  margin-bottom: 0;\r\n`;\r\n\r\nexport const HeaderTitle = styled.h1`\r\n  font-size: 22px;\r\n  margin-top: 0;\r\n  opacity: 80%;\r\n`;\r\n\r\nexport const CardWrapper = styled.main`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  padding-left: 35px;\r\n`;\r\n\r\nexport const EditIconContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 0;\r\n  width: 26px;\r\n  height: 26px;\r\n  float: right;\r\n  background-color: #ffffff;\r\n  border-radius: 50%;\r\n  visibility: hidden;\r\n`;\r\n\r\nexport const EditIcon = styled.img`\r\n  width: 14px;\r\n  height: 14px;\r\n  opacity: 30%;\r\n`;\r\n\r\nexport const Card = styled.div`\r\n  width: 340px;\r\n  box-sizing: border-box;\r\n  border: 1px solid rgba(0, 17, 34, 0.1);\r\n  border-radius: 2px;\r\n  margin: 25px 0 0 25px;\r\n  padding: 10px 10px 16px 25px;\r\n  background-color: RGBA(246, 246, 246, 0.2);\r\n  &:hover {\r\n    background-color: RGB(246, 246, 246);\r\n    cursor: pointer;\r\n  }\r\n  &:hover ${EditIconContainer} {\r\n    visibility: visible;\r\n  }\r\n`;\r\n\r\nexport const CardTitle = styled.h3`\r\n  font-weight: 700;\r\n  font-size: 18px;\r\n  margin: 0;\r\n  color: #001122;\r\n  line-height: 32px;\r\n  opacity: 80%;\r\n  margin-top: 5px;\r\n`;\r\n\r\nexport const CardList = styled.ul`\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nexport const CardListItem = styled.li`\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  margin-top: 5px;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nexport const CardListIcon = styled.img`\r\n  position: relative;\r\n  top: 2px;\r\n  opacity: 30%;\r\n  width: 14px;\r\n  height: 14px;\r\n`;\r\n\r\nexport const CardListText = styled.p`\r\n  display: inline-block;\r\n  margin: 0 0 0 8px;\r\n`;\r\n\r\nexport const ModalContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1;\r\n  background-color: RGBA(0, 17, 34, 0.6);\r\n`;\r\n\r\nexport const ModalWindow = styled.div`\r\n  box-sizing: border-box;\r\n  width: 440px;\r\n  padding-left: 25px;\r\n  padding-right: 25px;\r\n  border-radius: 2px;\r\n  background-color: RGB(255, 255, 255);\r\n`;\r\n\r\nexport const ModalTitle = styled.h4`\r\n  opacity: 80%;\r\n`;\r\n\r\nexport const ModalSubtitle = styled.h5`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  opacity: 80%;\r\n  margin-bottom: 0;\r\n  line-height: 24px;\r\n`;\r\n\r\nexport const ModalDescription = styled.p`\r\n  font-size: 14px;\r\n  margin-top: 0;\r\n`;\r\n\r\nexport const ModalCTA = styled.button`\r\n  width: 64px;\r\n  height: 32px;\r\n  margin-bottom: 10px;\r\n  border: none;\r\n  border-radius: 16px;\r\n  color: RGB(255, 255, 255);\r\n  background-color: RGB(55, 178, 77);\r\n  float: right;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: RGB(55, 160, 77);\r\n  }\r\n`;\r\n\r\nexport const ModalXButton = styled.button`\r\n  float: right;\r\n  background-color: RGB(255, 255, 255);\r\n  border: none;\r\n  padding: 0;\r\n  opacity: 30%;\r\n  cursor: pointer;\r\n`;\r\n","import { SubHeaderTitle, HeaderTitle } from \"./Stylesheet\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <SubHeaderTitle>All locations</SubHeaderTitle>\r\n      <HeaderTitle>Acme locations</HeaderTitle>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/Close.924f720d.svg\";","export default __webpack_public_path__ + \"static/media/Users.cf2ab463.svg\";","export default __webpack_public_path__ + \"static/media/Timezone.04849c9e.svg\";","export default __webpack_public_path__ + \"static/media/Views.750a5864.svg\";","import React from \"react\";\r\nimport UsersSvg from \"../assets/Users.svg\";\r\nimport TimezoneSvg from \"../assets/Timezone.svg\";\r\nimport ViewsSvg from \"../assets/Views.svg\";\r\nimport moment from \"moment-timezone\";\r\nimport {\r\n  CardList,\r\n  CardListItem,\r\n  CardListIcon,\r\n  CardListText,\r\n} from \"./Stylesheet\";\r\n\r\n//construct LocationInfo list (used in LocationCard and Modal)\r\nfunction LocationInfo({ locationData, views }) {\r\n  return (\r\n    <CardList>\r\n      <CardListItem>\r\n        <CardListIcon src={UsersSvg} alt=\"users svg\" />\r\n        <CardListText>{locationData.userCount} Users</CardListText>\r\n      </CardListItem>\r\n      <CardListItem>\r\n        <CardListIcon src={TimezoneSvg} alt=\"timezone svg\" />\r\n        <CardListText>\r\n          {moment(locationData.createdAt).format(\"hh:mma ([GMT]Z)\")}\r\n        </CardListText>\r\n      </CardListItem>\r\n      <CardListItem>\r\n        <CardListIcon src={ViewsSvg} alt=\"views svg\" />\r\n        <CardListText>\r\n          {views} View{views !== 1 && \"s\"}\r\n        </CardListText>\r\n      </CardListItem>\r\n    </CardList>\r\n  );\r\n}\r\n\r\nexport default LocationInfo;\r\n","import React from \"react\";\r\nimport CloseSvg from \"../assets/Close.svg\";\r\nimport LocationInfo from \"./LocationInfo\";\r\nimport {\r\n  ModalContainer,\r\n  ModalWindow,\r\n  ModalTitle,\r\n  ModalSubtitle,\r\n  ModalDescription,\r\n  ModalCTA,\r\n  ModalXButton,\r\n} from \"./Stylesheet\";\r\n\r\n//construct modal with click events to close both on button clicks + clicking outside modal\r\nfunction Modal({ hideModalFunction, modalData }) {\r\n  return (\r\n    <ModalContainer onClick={hideModalFunction}>\r\n      <ModalWindow onClick={(e) => e.stopPropagation()}>\r\n        <ModalTitle>\r\n          {modalData.locationData.name}\r\n          <ModalXButton onClick={hideModalFunction}>\r\n            <img src={CloseSvg} alt=\"close svg\" />\r\n          </ModalXButton>\r\n        </ModalTitle>\r\n        <LocationInfo\r\n          locationData={modalData.locationData}\r\n          views={modalData.views}\r\n        />\r\n        <ModalSubtitle>Description</ModalSubtitle>\r\n        <ModalDescription>\r\n          {modalData.locationData.description}\r\n        </ModalDescription>\r\n        <ModalCTA onClick={hideModalFunction}>Done</ModalCTA>\r\n      </ModalWindow>\r\n    </ModalContainer>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","export default __webpack_public_path__ + \"static/media/Edit.d41e05b4.svg\";","import React, { useState } from \"react\";\r\nimport { Card, CardTitle, EditIcon, EditIconContainer } from \"./Stylesheet\";\r\nimport EditSvg from \"../assets/Edit.svg\";\r\nimport LocationInfo from \"./LocationInfo\";\r\n\r\nfunction LocationCard({ locationData, showModalHandler }) {\r\n  const [views, setViews] = useState(0);\r\n\r\n  //handle opening of modal and increment + send view count\r\n  function openModal(id) {\r\n    const updatedViews = views + 1;\r\n    setViews(updatedViews);\r\n    showModalHandler(id, updatedViews);\r\n  }\r\n  //construct card component\r\n  return (\r\n    <Card onClick={() => openModal(locationData.id)}>\r\n      <EditIconContainer>\r\n        <EditIcon src={EditSvg} alt=\"edit svg\" />\r\n      </EditIconContainer>\r\n      <CardTitle>{locationData.name}</CardTitle>\r\n      <LocationInfo locationData={locationData} views={views} />\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default LocationCard;\r\n","import React from \"react\";\r\nimport LocationCard from \"./LocationCard\";\r\n\r\nfunction CardContainer(props) {\r\n  //show error on page if fetch was unsuccessful\r\n  if (props.locationData.length === 0) {\r\n    return <p>Loading...</p>;\r\n  }\r\n  //populate LocationCard components with data from API\r\n  return props.locationData.map((locationData) => {\r\n    return (\r\n      <LocationCard\r\n        key={locationData.id}\r\n        locationData={locationData}\r\n        showModalHandler={props.showModalHandler}\r\n      />\r\n    );\r\n  });\r\n}\r\n\r\nexport default CardContainer;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Header from \"./components/Header\";\nimport Modal from \"./components/Modal\";\nimport CardContainer from \"./components/CardContainer\";\nimport { CardWrapper } from \"./components/Stylesheet\";\n\n//API endpoint\nconst fetchUrl = \"https://6033c4d8843b15001793194e.mockapi.io/api/locations\";\n\nfunction App() {\n  const [modalState, setModalState] = useState(false);\n  const [modalData, setModalData] = useState({ locationData: [], views: 0 });\n  const [locationData, setLocationData] = useState([]);\n\n  //fetch API data asyncrhonously, throw error if there is a network/fetch issue\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const request = await axios.get(fetchUrl);\n        setLocationData(request.data);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchData();\n  }, []);\n\n  //handle show/hide of modal element\n  function showModal(id, views) {\n    setModalData({ locationData: locationData[id - 1], views: views });\n    document.body.style.overflow = \"hidden\";\n    setModalState(true);\n  }\n\n  function hideModal() {\n    setModalState(false);\n    document.body.style.overflow = \"auto\";\n  }\n\n  //conditionally render modal based on state\n  return (\n    <React.Fragment>\n      {modalState && (\n        <Modal hideModalFunction={hideModal} modalData={modalData} />\n      )}\n      <Header />\n      <CardWrapper>\n        <CardContainer\n          showModalHandler={showModal}\n          locationData={locationData}\n        />\n      </CardWrapper>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}